# Academic Conference Poster System
# Streamlined automation for academic conference poster creation

# Set shell
set shell := ["zsh", "-c"]

# Variables
poster_dir := justfile_directory()
templates_dir := poster_dir + "/templates"
conferences_dir := poster_dir + "/conferences"
assets_dir := poster_dir + "/assets"
output_dir := poster_dir + "/output"

# Default recipe - show available commands
default:
    @echo "Academic Conference Poster System"
    @echo "================================="
    @just --list

# === Setup and Initialization ===

# Initialize complete poster system
init: create-dirs create-templates
    @echo "✅ Poster system initialized successfully!"

# Create directory structure
create-dirs:
    #!/usr/bin/env zsh
    mkdir -p templates/{standard,landscape,specialized/{biology,cs,physics,chemistry,psychology}}
    mkdir -p conferences/{2024,2025,2026}
    mkdir -p assets/{figures,logos,data,references}
    mkdir -p output/{drafts,reviews,final}
    echo "📁 Directory structure created"

# === Conference Poster Creation ===

# Create new conference poster
create conference year template="standard": 
    #!/usr/bin/env zsh
    mkdir -p "conferences/{{year}}/{{conference}}"
    
    # Select template
    template_file="templates/{{template}}/poster.qmd"
    if [[ ! -f "$template_file" ]]; then
        template_file="templates/standard/poster.qmd"
    fi
    
    # Copy template and customize
    cp "$template_file" "conferences/{{year}}/{{conference}}/{{conference}}_poster.qmd"
    
    # Create conference-specific assets folder
    mkdir -p "conferences/{{year}}/{{conference}}/assets"
    
    echo "✅ Created poster for {{conference}} {{year}}"
    echo "📝 Edit: conferences/{{year}}/{{conference}}/{{conference}}_poster.qmd"

# Quick create for current year
create-now conference template="standard": (create conference "2025" template)

# Create basic templates
create-templates:
    #!/usr/bin/env zsh
    # Standard template
    mkdir -p templates/standard
    cat > templates/standard/poster.qmd << 'EOF'
---
title: "{{CONFERENCE}} {{YEAR}} - {{TITLE}}"
author: "{{AUTHOR}}"
institute: "{{INSTITUTE}}"
format:
  poster-typst:
    size: "36x24in"
    poster-authors: "{{AUTHOR}}"
    departments: "{{DEPARTMENT}}"
    institution-logo: "../../../assets/logos/institution.png"
    footer-text: "{{CONFERENCE}} {{YEAR}}"
    footer-url: "{{URL}}"
    footer-emails: "{{EMAIL}}"
---

# Introduction

Your introduction content here.

# Methods

Your methods content here.

# Results

Your results content here.

# Conclusions

Your conclusions here.
EOF
    
    # Landscape template
    mkdir -p templates/landscape
    cp templates/standard/poster.qmd templates/landscape/poster.qmd
    sed -i '' 's/36x24in/48x36in/' templates/landscape/poster.qmd
    
    echo "📝 Basic templates created"

# === Rendering and Output ===

# Render poster to draft
render conference year format="pdf":
    #!/usr/bin/env zsh
    poster_file="conferences/{{year}}/{{conference}}/{{conference}}_poster.qmd"
    if [[ -f "$poster_file" ]]; then
        mkdir -p "output/drafts/{{conference}}_{{year}}"
        quarto render "$poster_file" --to {{format}} --output-dir "output/drafts/{{conference}}_{{year}}"
        echo "✅ Rendered {{conference}} {{year}} poster to output/drafts/"
    else
        echo "❌ Poster file not found: $poster_file"
    fi

# Render for review
render-review conference year format="pdf": 
    #!/usr/bin/env zsh
    poster_file="conferences/{{year}}/{{conference}}/{{conference}}_poster.qmd"
    if [[ -f "$poster_file" ]]; then
        mkdir -p "output/reviews/{{conference}}_{{year}}"
        quarto render "$poster_file" --to {{format}} --output-dir "output/reviews/{{conference}}_{{year}}"
        echo "✅ Review version rendered to output/reviews/"
    else
        echo "❌ Poster file not found: $poster_file"
    fi

# Create final submission version
finalize conference year format="pdf":
    #!/usr/bin/env zsh
    poster_file="conferences/{{year}}/{{conference}}/{{conference}}_poster.qmd"
    if [[ -f "$poster_file" ]]; then
        timestamp=$(date +"%Y%m%d_%H%M%S")
        mkdir -p "output/final/{{conference}}_{{year}}"
        quarto render "$poster_file" --to {{format}} --output-dir "output/final/{{conference}}_{{year}}"
        
        # Create timestamped copy
        cp "output/final/{{conference}}_{{year}}/{{conference}}_poster.{{format}}" \
           "output/final/{{conference}}_{{year}}/{{conference}}_{{year}}_final_${timestamp}.{{format}}"
        
        echo "✅ Final version created: output/final/{{conference}}_{{year}}/"
    else
        echo "❌ Poster file not found: $poster_file"
    fi

# === Asset Management ===

# Add figure to assets
add-figure name file:
    #!/usr/bin/env zsh
    cp "{{file}}" "assets/figures/{{name}}"
    echo "✅ Added figure: assets/figures/{{name}}"

# Add logo to assets
add-logo name file:
    #!/usr/bin/env zsh
    cp "{{file}}" "assets/logos/{{name}}"
    echo "✅ Added logo: assets/logos/{{name}}"

# === Listing and Information ===

# List all conferences and posters
list:
    #!/usr/bin/env zsh
    echo "Conference Posters:"
    echo "==================="
    find conferences -name "*_poster.qmd" -exec echo "📄 {}" \; | sort

# List available templates
list-templates:
    #!/usr/bin/env zsh
    echo "Available Templates:"
    echo "==================="
    find templates -name "poster.qmd" -exec dirname {} \; | sed 's|templates/||' | sort

# Show poster info
info conference year:
    #!/usr/bin/env zsh
    poster_file="conferences/{{year}}/{{conference}}/{{conference}}_poster.qmd"
    if [[ -f "$poster_file" ]]; then
        echo "Poster: {{conference}} {{year}}"
        echo "File: $poster_file"
        echo "Size: $(wc -l < "$poster_file") lines"
        echo "Modified: $(stat -f %Sm "$poster_file")"
    else
        echo "❌ Poster not found: {{conference}} {{year}}"
    fi

# === Cleanup ===

# Clean draft outputs
clean-drafts:
    rm -rf output/drafts/*
    echo "🧹 Cleaned draft outputs"

# Clean all outputs
clean-all:
    rm -rf output/{drafts,reviews,final}/*
    echo "🧹 Cleaned all outputs"

# === Archive Management ===

# Archive completed poster
archive conference year:
    #!/usr/bin/env zsh
    timestamp=$(date +"%Y%m%d")
    mkdir -p "conferences/archived"
    tar -czf "conferences/archived/{{conference}}_{{year}}_${timestamp}.tar.gz" \
             "conferences/{{year}}/{{conference}}"
    echo "📦 Archived: conferences/archived/{{conference}}_{{year}}_${timestamp}.tar.gz"

# === Quick Commands ===

# Quick render of current working poster (assumes you're in a conference folder)
quick-render:
    #!/usr/bin/env zsh
    if [[ -f *_poster.qmd ]]; then
        poster_file=$(ls *_poster.qmd | head -1)
        mkdir -p "../../../output/drafts/quick"
        quarto render "$poster_file" --to pdf --output-dir "../../../output/drafts/quick"
        echo "✅ Quick render complete: output/drafts/quick/"
    else
        echo "❌ No poster file found in current directory"
    fi
