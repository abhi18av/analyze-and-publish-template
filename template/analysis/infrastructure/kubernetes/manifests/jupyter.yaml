apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter-lab
  namespace: template-analysis
  labels:
    app: jupyter-lab
    component: notebook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter-lab
  template:
    metadata:
      labels:
        app: jupyter-lab
        component: notebook
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 100
      containers:
      - name: jupyter
        image: jupyter/datascience-notebook:latest
        ports:
        - containerPort: 8888
          name: notebook
        env:
        - name: JUPYTER_ENABLE_LAB
          value: "yes"
        - name: JUPYTER_TOKEN
          valueFrom:
            secretKeyRef:
              name: jupyter-secret
              key: token
        - name: GRANT_SUDO
          value: "yes"
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
        volumeMounts:
        - name: notebook-storage
          mountPath: /home/jovyan/work
        - name: config-volume
          mountPath: /home/jovyan/.jupyter
        livenessProbe:
          httpGet:
            path: /api
            port: 8888
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: notebook-storage
        persistentVolumeClaim:
          claimName: jupyter-pvc
      - name: config-volume
        configMap:
          name: jupyter-config
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-service
  namespace: template-analysis
  labels:
    app: jupyter-lab
spec:
  selector:
    app: jupyter-lab
  ports:
  - port: 8888
    targetPort: 8888
    name: notebook
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyter-pvc
  namespace: template-analysis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: jupyter-secret
  namespace: template-analysis
type: Opaque
data:
  token: ZGF0YS1zY2llbmNlLXRva2VuLTEyMw== # base64 encoded: data-science-token-123
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyter-config
  namespace: template-analysis
data:
  jupyter_notebook_config.py: |
    import os
    
    c.NotebookApp.ip = '0.0.0.0'
    c.NotebookApp.port = 8888
    c.NotebookApp.open_browser = False
    c.NotebookApp.allow_root = True
    c.NotebookApp.notebook_dir = '/home/jovyan/work'
    c.NotebookApp.token = os.environ.get('JUPYTER_TOKEN', '')
    c.NotebookApp.allow_remote_access = True
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jupyter-ingress
  namespace: template-analysis
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: jupyter.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jupyter-service
            port:
              number: 8888
