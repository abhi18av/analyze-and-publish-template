#import 'misc/utils.just'
#import 'scripts/scripts.just'
#import 'app/app.just'
#import 'dashboards/dashboards.just'
import 'pipelines/pipelines.just'
import "data/data.just"
import "infrastructure/environments.just"
import "infrastructure/infrastructure.just"
import "misc/utils.just"
import "notebooks/notebooks.just"
import "scripts/scripts.just"
import "writeup/writeup.just"

# {{ project_name }} - Data Science Project Tasks

module_name := "{{module_name}}"

# list commands
default:
    @just --list

# setup for development
setup: install git-setup

# install the packages
install:
  {% raw %}{{if path_exists("uv.lock") != "true" {"uv sync --all-groups --all-extras --inexact"} else {"uv sync --all-groups --all-extras --locked --inexact"} }}{% endraw %}

# ensure code quality before git commit via pre-commit and nbwipers
git-setup: install
  uv run nbwipers install local
  uv run pre-commit install --install-hooks

# run test coverage and create
test-cov:
  uv run pytest --cov {% raw %}{{module_name}}{% endraw %} --cov-report=lcov:lcov.info --cov-report=term-missing --cov-report html --cov-report xml

# update packages and uv lock file
update:
  uv sync -U --all-groups --all-extras --inexact

# update pre-commit file
pc-update:
  uvx pre-commit-update

# === Data Management ===

{% if experiment_tracking != "None" %}
# === Experiment Tracking ===

# Start experiment tracking server
track-start:
    {% if experiment_tracking == "MLflow" %}
    @mlflow ui --port 5000
    {% elif experiment_tracking == "Weights & Biases" %}
    @wandb login
    {% endif %}
{% endif %}

{% if include_deployment_templates %}
# === Deployment ===

# Build Docker image
docker-build:
    @docker build -t {{ project_name|lower|replace(" ", "-") }} .

# Run Docker container
docker-run:
    @docker run -p 8000:8000 {{ project_name|lower|replace(" ", "-") }}
{% endif %}


# Run full pipeline with DVC
pipeline:
    dvc repro

# Visualize pipeline
pipeline-dag:
    dvc dag

# Clean intermediate files
clean:
    rm -rf data/processed/*
    rm -rf outputs/*

project-fish:
    ./misc/run_fish.sh

